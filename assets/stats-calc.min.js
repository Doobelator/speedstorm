function generateCrewMembers(e){fetch("./json/crew_data.json").then(e=>e.json()).then(t=>{let l=document.querySelector(".crew-members");l.innerHTML="",t.forEach(t=>{if(t.characters&&t.characters.includes(e)){let r=JSON.stringify(t.stats),a=Array.from({length:5},(e,l)=>`<i class="${l<t.star?"fas":"far"} fa-star" onclick="setStar(this, ${l+1})"></i>`).join(""),s=`
                      <div class="crew-member-container">
                        <img src="${t.image}" data-stats='${r}' data-star="${t.star}" data-epic="${t.epic}" onclick="selectImage(this)" style="cursor: pointer;">
                        <div class="crew-member" data-crew="member${t.name}">
                          <div class="stars hidden">${a}</div>
                          <div class="crew-member-stats text-center">${t.stats.join(", ")}</div>
                        </div>
                      </div>
                    `;l.innerHTML+=s}})}).catch(e=>{console.error("Error fetching crew data:",e)})}function setStar(e,t){let l=e.closest(".crew-member-container"),r=l.querySelector("img");r.setAttribute("data-star",t);let a=l.querySelectorAll(".fa-star");a.forEach((e,l)=>{e.classList.toggle("fas",l<t),e.classList.toggle("far",l>=t)})}function selectImage(e){let t=e.closest(".crew-member-container");t.classList.toggle("selected");let l=t.querySelector(".stars");l.classList.toggle("hidden")}function calculateIntervals(e,t){let l={};return Object.keys(e).forEach(r=>{let a=e[r],s=Object.keys(a).reduce((e,t)=>(e[parseInt(t.replace("level",""))]=a[t],e),{}),n={};if(Object.keys(s).forEach(e=>{e=parseInt(e);let l=Object.keys(s).map(e=>parseInt(e)).filter(t=>t>e),a=l.length>0?Math.min(...l):null;if(a){let c=s[a]-s[e],i=t[r].filter(t=>t>e&&t<=a).length;i>0&&(n[e]=c/i)}}),s.hasOwnProperty("1")){let c=t[r].find(e=>e>1);if(c){let i=s[`level${c}`];if(i){let o=i-s["1"],_=t[r].filter(e=>e>=1&&e<=c).length-1;_>0&&(n["1"]=o/_)}}}let d=!1,$=Math.max(...Object.keys(s).map(e=>parseInt(e)));if(45===$){let f=Object.values(n).slice(-2);if(2===f.length){let g=f[1]-f[0];for(let m=$;m<=50;m++){let u=n[m-1]||f[1];d?n[m]=u:n[m]=u+g,d=!0}}}let h=s[Math.min(...Object.keys(s).map(e=>parseInt(e)))];l[r]={},t[r].forEach(e=>{let t=Object.keys(n).map(e=>parseInt(e)).filter(t=>t<e),a=t.length>0?Math.max(...t):null,c;Object.keys(s).map(e=>parseInt(e)).filter(t=>t>=e).length,null!==a&&void 0!==n[a]&&(h+=n[a]),l[r][`level${e}`]=Math.round(h)}),Object.keys(s).forEach(e=>{let t=`level${e}`;t in l[r]||(l[r][t]=s[e])})}),l}function fillMissingLevels(e){let t={};for(let l in e){let r=e[l];t[l]={};let a=null;for(let s=1;s<=50;s++)void 0!==r[`level${s}`]?(a=r[`level${s}`],t[l][`level${s}`]=a):null!==a?t[l][`level${s}`]=a:t[l][`level${s}`]=0}return t}generateCrewMembers("Mickey"),document.getElementById("character").addEventListener("change",function(){let e=this.value;generateCrewMembers(e)}),fetch("./json/stats_levels.json").then(e=>e.json()).then(e=>{function t(){let e=document.getElementById("character"),t=e.value,r=parseInt(document.getElementById("level").value),a=e.options[e.selectedIndex],s=a.getAttribute("data-type"),n=a.getAttribute("data-class");if(!t||isNaN(r)||r<1||r>50){alert("Please enter a level from 1 to 50.");return}let c={},i=1,o={common:[1.03,1.05,1.06,1.07,1.08],rare:[1.04,1.06,1.08,1.09,1.1],epic:[1.05,1.09,1.12,1.14,1.15]},_=o[s]||o.epic,d=document.querySelectorAll(".crew-member-container.selected");d.forEach(e=>{let t=e.querySelector("img"),l=JSON.parse(t.getAttribute("data-stats")),r=parseInt(t.getAttribute("data-star")),a="true"===t.getAttribute("data-epic");if(a)i*=_[r-1];else{let s={1:200,2:350,3:450,4:525,5:600};l.forEach(e=>{c[e]||(c[e]=0),c[e]+=s[r]||0})}});let $=calculateIntervals(inputJson[t],l[n]),f=fillMissingLevels($);if(!f){alert("Data for the selected character is not available.");return}let g=f,m={};Object.keys(g).forEach(e=>{m[e]=g[e]["level"+r]}),Object.keys(m).forEach(e=>{c[e]&&(m[e]+=c[e]),m[e]=Math.round(m[e]*i)});let u=document.getElementById("result");u.innerHTML=`<table class="stat-table table-auto w-full bg-black bg-opacity-50"><thead><tr><th>Stat</th><th>Value</th></tr></thead><tbody>${Object.entries(m).map(([e,t])=>{let a=l[n][e]?.includes(r);return`<tr><td class="p-5 text-center">${e}</td><td class="p-5 text-center ${a?"text-green-500":""}">~ ${50*Math.round((t-15)/50)} ${a?"*":""}</td></tr>`}).join("")}</tbody></table><p class="text-green-500">* The stat in green is the stat gained from the current selected level.</p>`}inputJson=e,document.getElementById("calculateStats").addEventListener("click",function(){t()});let l={Defender:{Combat:[2,7,12,17,22,27,32,37,42,47],Boost:[3,8,13,18,23,28,33,38,43,48],"Top Speed":[4,9,14,19,24,29,34,39,44,49],Handling:[5,10,15,20,25,30,35,40,45,50],Acceleration:[6,11,16,21,26,31,36,41,46,50]},Speedster:{Acceleration:[2,7,12,17,22,27,32,37,42,47],"Top Speed":[3,8,13,18,23,28,33,38,43,48],Handling:[4,9,14,19,24,29,34,39,44,49],Combat:[5,10,15,20,25,30,35,40,45,50],Boost:[6,11,16,21,26,31,36,41,46,50]},Trickster:{Boost:[2,7,12,17,22,27,32,37,42,47],Handling:[3,8,13,18,23,28,33,38,43,48],Acceleration:[4,9,14,19,24,29,34,39,44,49],"Top Speed":[5,10,15,20,25,30,35,40,45,50],Combat:[6,11,16,21,26,31,36,41,46,50]},Brawler:{"Top Speed":[2,7,12,17,22,27,32,37,42,47],Combat:[3,8,13,18,23,28,33,38,43,48],Boost:[4,9,14,19,24,29,34,39,44,49],Acceleration:[5,10,15,20,25,30,35,40,45,50],Handling:[6,11,16,21,26,31,36,41,46,50]}}}).catch(e=>{console.error("Error fetching JSON:",e)});
